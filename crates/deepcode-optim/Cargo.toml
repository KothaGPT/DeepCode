[package]
authors = ["Md. Sulaiman <dev.sulaiman@icloud.com>"]
categories = ["science", "no-std", "embedded", "wasm"]
description = "Optimizer building blocks for the Deepcode deep learning framework"
documentation = "https://docs.rs/deepcode-optim"
edition.workspace = true
keywords = ["deep-learning", "machine-learning", "tensor", "pytorch", "ndarray"]
license.workspace = true
name = "deepcode-optim"
readme.workspace = true
repository = "https://github.com/kothagpt/deepcode/tree/main/crates/deepcode-optim"
version.workspace = true

[lints]
workspace = true

[features]
default = [
    "std",
    "deepcode-core/default",
]
doc = [
    "std",
    # Doc features
    "deepcode-core/doc",
]
std = [
    "deepcode-core/std",
    "num-traits/std",
    "serde/std",
    "log",
]

collective = ["deepcode-collective"]

test-cuda = [
    "deepcode-cuda/default",
] # To use cuda during testing, default uses ndarray.
test-rocm = [
    "deepcode-rocm/default",
] # To use hip during testing, default uses ndarray.
test-tch = [
    "deepcode-tch/default",
] # To use tch during testing, default uses ndarray.
test-wgpu = [
    "deepcode-wgpu/default",
] # To use wgpu during testing, default uses ndarray.
test-vulkan = [
    "test-wgpu",
    "deepcode-wgpu/vulkan",
] # To use wgpu-spirv during testing, default uses ndarray.
test-metal = [
    "test-wgpu",
    "deepcode-wgpu/metal",
] # To use wgpu-spirv during testing, default uses ndarray.

# Memory checks are disabled by default
test-memory-checks = ["deepcode-fusion/memory-checks"]

[dependencies]

# ** Please make sure all dependencies support no_std when std is disabled **
deepcode-core = { path = "../deepcode-core", version = "0.1.0", default-features = false }
deepcode-collective = { path = "../deepcode-collective", version = "0.1.0", optional = true, default-features = false }

num-traits = { workspace = true }
derive-new = { workspace = true }
log = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }

# The same implementation of HashMap in std but with no_std support (only alloc crate is needed)
hashbrown = { workspace = true, features = ["serde"] } # no_std compatible

# FOR TESTING
deepcode-cuda = { path = "../deepcode-cuda", version = "0.1.0", optional = true, default-features = false }
deepcode-rocm = { path = "../deepcode-rocm", version = "0.1.0", optional = true, default-features = false }
deepcode-remote = { path = "../deepcode-remote", version = "0.1.0", default-features = false, optional = true }
deepcode-router = { path = "../deepcode-router", version = "0.1.0", default-features = false, optional = true }
deepcode-tch = { path = "../deepcode-tch", version = "0.1.0", optional = true }
deepcode-wgpu = { path = "../deepcode-wgpu", version = "0.1.0", optional = true, default-features = false }
deepcode-fusion = { path = "../deepcode-fusion", version = "0.1.0", optional = true }

[dev-dependencies]
deepcode-nn = { path = "../deepcode-nn", version = "0.1.0" }
deepcode-ndarray = { path = "../deepcode-ndarray", version = "0.1.0" }
deepcode-autodiff = { path = "../deepcode-autodiff", version = "0.1.0" }
rstest = { workspace = true }

[package.metadata.docs.rs]
features = ["doc"]
rustdoc-args = ["--cfg", "docsrs"]
